<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true">
  <!--internalLogLevel="Debug"
      internalLogFile="nlog.internal.log"-->
  
  <extensions>
    <add assembly="Nlog.RabbitMQ.Target" />
		<add assembly="NLog.Appsettings.Standard" />
		<add assembly="Elastic.Apm.NLog"/>
	</extensions>

    <variable name="logRabbitMqHost" value="s-kv-center-z22.officekiev.fozzy.lan" />
    <variable name="logRabbitMqUsert" value="testing" />
    <variable name="logRabbitMqPassword" value="UEr0Kghwho22ID" />
    <variable name="logRabbitMqVhost" value="logs" />
    <variable name="logRabbitMqExchange" value="logs" />


    <!-- the targets to write to -->
  <targets async="true">
    <!-- write to the void aka just remove -->
    <target xsi:type="Null" name="blackhole" />

    <target
      xsi:type="Console"
      name="defaultConsole"
      layout="${longdate} ${uppercase:${level}} [${logger}] ${event-properties:item=msg} ${event-properties:item=requestGuid} ${error-type}" />

		<target name="JsonNetwork"
			xsi:type="Network"
			address="udp://logstash-lb.fozzy.lan:12210"
			newLine="false"
			encoding="utf-8">

			<layout xsi:type="JsonLayout" includeAllProperties="true" maxRecursionLimit="20">
				<attribute name="time" layout="${longdate}" />
				<attribute name="level" layout="${level:upperCase=true}"/>
				<attribute name="message" layout="${message}" />

				<attribute name="levelString" layout="${uppercase:${level}}"/>
				<attribute name="machineName" layout="${machinename}"/>
				<attribute name="assemblyVersion" layout="${assembly-version}"/>
				<attribute name="requestGuid" layout="${mdlc:item=requestGuid}"/>
				<attribute name="orderId" layout="${mdlc:item=orderId}"/>
				<attribute name="filialId" layout="${mdlc:item=filialId}"/>
				<attribute name="posUrl" layout="${mdlc:item=posUrl}"/>
				<attribute name="basketGuid" layout="${mdlc:item=basketGuid}"/>
				<attribute name="userGuid" layout="${mdlc:item=userGuid}"/>
				<attribute name="operation" layout="${mdlc:item=operation}"/>
				<attribute name="traceid" layout="${ElasticApmTraceId}" />
				<attribute name="transactionid" layout="${ElasticApmTransactionId}" />

				<attribute name="exception" layout="${onexception:${exception:format=tostring}}" />
				<attribute name="serviceName" layout="ECom.Service" />
			</layout>
		</target>
    <target
      xsi:type="RabbitMQ"
      name="json-rabbit"
      username="${logRabbitMqUsert}"
      password="${logRabbitMqPassword}"
      hostname="${logRabbitMqHost}"
      exchange="${logRabbitMqExchange}"
      port="5672"
      vhost="${logRabbitMqVhost}"
      deliveryMode="Persistent"
      useJSON ="true"
    >
        <field key="project" name="project" layout="ECom"/>
        <field key="environment" name="environment" layout="Test"/>

        <field key="levelString" name="levelString" layout="${uppercase:${level}}"/>
        <field key="machineName" name="machineName" layout="${machinename}"/>
        <field key="assemblyVersion" name="assemblyVersion" layout="${assembly-version}"/>
			<field key="requestGuid" name="requestGuid" layout="${when:when='${mdlc:item=requestGuid}'=='':inner=${event-properties:item=requestGuid}:else=${mdlc:item=requestGuid}}"/>
			<field key="orderId" name="orderId" layout="${mdlc:item=orderId}"/>
        <field key="filialId" name="filialId" layout="${mdlc:item=filialId}"/>
        <field key="userId" name="userId" layout="${mdlc:item=userId}"/>
        <field key="posUrl" name="posUrl" layout="${mdlc:item=posUrl}"/>
        <field key="basketGuid" name="basketGuid" layout="${when:when='${mdlc:item=basketGuid}'=='':inner=${event-properties:item=basketGuid}:else=${mdlc:item=basketGuid}}"/>
        <field key="userGuid" name="userGuid" layout="${mdlc:item=userGuid}"/>
        <field key="errorType" name="errorType" layout="${error-type}"/>
			<field key="errorSeverity" name="errorSeverity" layout="${mdlc:item=errorSeverity}"/>
		</target>

  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
		<logger name="Hangfire.*" minlevel="Debug" writeTo="JsonNetwork" />
    <logger name="Hangfire.*" minlevel="Debug" writeTo="json-rabbit" />
    <logger name="ECom.*" minlevel="Trace" writeTo="defaultConsole" />
		<logger name="ECom.*" minlevel="Trace" writeTo="JsonNetwork" />
    <logger name="ECom.*" minlevel="Trace" writeTo="json-rabbit" />

    <logger name="Microsoft.Hosting.*" minlevel="Info" writeTo="defaultConsole"/>
    <logger name="Microsoft.Hosting.*" minlevel="Info" writeTo="JsonNetwork"/>
    <logger name="Microsoft.Hosting.*" minlevel="Info" writeTo="json-rabbit"/>
    <logger name="MassTransit*" minlevel="Debug" writeTo="defaultConsole" >
      <filters defaultAction="Log">
        <when condition="starts-with('${message}','SEND')" action="Ignore"/>
        <when condition="starts-with('${message}','RECEIVE')" action="Ignore"/>
      </filters>
    </logger>

		<logger name="MassTransit*" minlevel="Debug" writeTo="JsonNetwork" >
			<filters defaultAction="Log">
				<when condition="starts-with('${message}','SEND')" action="Ignore"/>
			</filters>
		</logger>
    <logger name="MassTransit*" minlevel="Debug" writeTo="json-rabbit" >
      <filters defaultAction="Log">
        <when condition="starts-with('${message}','SEND')" action="Ignore"/>
        
      </filters>
    </logger>
    
    <!--Skip Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />
  </rules>
</nlog>
