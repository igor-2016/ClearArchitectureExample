<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true">
	<!--internalLogLevel="Debug"
      internalLogFile="nlog.internal.log"-->

  <extensions>
		<add assembly="NLog.Appsettings.Standard" />
		
	</extensions>



  <!-- the targets to write to -->
  <targets async="true">
    <!-- write to the void aka just remove -->
	<!--target xsi:type="Null" name="blackhole" /-->

    
    <target
      xsi:type="ColoredConsole"
      name="defaultConsole"
		  layout="${longdate} ${uppercase:${level}} [${logger}] ${when:when='${event-properties:item=msg}'=='':${message}:else=${event-properties:item=msg}} ${event-properties:item=requestGuid} ${exception:innerFormat=Message,StackTrace} ${error-type}" />
  
		<target name="JsonNetwork"
				xsi:type="Network"
				address="udp://logstash-lb.fozzy.lan:12209"
				newLine="false"
		        encoding="utf-8">

			<layout xsi:type="JsonLayout" includeAllProperties="true" maxRecursionLimit="20">
				<attribute name="time" layout="${longdate}" />
				<attribute name="level" layout="${level:upperCase=true}"/>
				<attribute name="message" layout="${message}" />

				<attribute name="levelString" layout="${uppercase:${level}}"/>
				<attribute name="machineName" layout="${machinename}"/>
				<attribute name="assemblyVersion" layout="${assembly-version}"/>
				<attribute name="requestGuid" layout="${mdlc:item=requestGuid}"/>
				<attribute name="orderId" layout="${mdlc:item=orderId}"/>
				<attribute name="filialId" layout="${mdlc:item=filialId}"/>
				<attribute name="posUrl" layout="${mdlc:item=posUrl}"/>
				<attribute name="basketGuid" layout="${mdlc:item=basketGuid}"/>
				<attribute name="userGuid" layout="${mdlc:item=userGuid}"/>
				<attribute name="operation" layout="${mdlc:item=operation}"/>
				<attribute name="traceid" layout="${ElasticApmTraceId}" />
				<attribute name="transactionid" layout="${ElasticApmTransactionId}" />

				<attribute name="exception" layout="${onexception:${exception:format=tostring}}" />
				<attribute name="serviceName" layout="ECom.Service" />
			</layout>
		</target>
  
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    
    <logger name="Hangfire.*" minlevel="Debug" writeTo="JsonNetwork" />
    <logger name="ECom.*" minlevel="Trace" writeTo="defaultConsole" />
		<logger name="ECom.*" minlevel="Trace" writeTo="JsonNetwork" />
		<logger name="Microsoft.Hosting.*" minlevel="Info" writeTo="defaultConsole"/>
		<logger name="Microsoft.Hosting.*" minlevel="Info" writeTo="JsonNetwork"/>

    <logger name="MassTransit*" minlevel="Debug" writeTo="defaultConsole" >
      <filters defaultAction="Log">
        <when condition="starts-with('${message}','SEND')" action="Ignore"/>
        <when condition="starts-with('${message}','RECEIVE')" action="Ignore"/>
      </filters>
    </logger>

		<logger name="MassTransit*" minlevel="Debug" writeTo="JsonNetwork" >
			<filters defaultAction="Log">
				<when condition="starts-with('${message}','SEND')" action="Ignore"/>
				<when condition="starts-with('${message}','RECEIVE')" action="Ignore"/>
			</filters>
		</logger>

   
    
    <!--Skip Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />    
  </rules>
</nlog>
