<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true">
  <!--internalLogLevel="Debug"
      internalLogFile="nlog.internal.log"-->

  <extensions>
    <add assembly="Nlog.RabbitMQ.Target" />
  </extensions>

  <variable name="logRabbitMqHost" value="rabbitmq-logs.sm.fozzy.lan" />
  <variable name="logRabbitMqUsert" value="ecom" />
  <variable name="logRabbitMqPassword" value="4LXaZnfEgYgDC5owh6" />
  <variable name="logRabbitMqVhost" value="logs" />
  <variable name="logRabbitMqExchange" value="logs" />


    <!-- the targets to write to -->
  <targets async="true">
    <!-- write to the void aka just remove -->
    <target xsi:type="Null" name="blackhole" />

    <target
      xsi:type="Console"
      name="defaultConsole"
      layout="${longdate} ${uppercase:${level}} [${logger}] ${event-properties:item=requestGuid} ${event-properties:item=ProductId} ${event-properties:item=msg} ${error-type}" />

    <target
      xsi:type="RabbitMQ"
      name="json-rabbit"
      username="${logRabbitMqUsert}"
      password="${logRabbitMqPassword}"
      hostname="${logRabbitMqHost}"
      exchange="${logRabbitMqExchange}"
      port="5672"
      vhost="${logRabbitMqVhost}"
      deliveryMode="Persistent"
      useJSON ="true"
    >
        <field key="project" name="project" layout="ECom"/>
        <field key="environment" name="environment" layout="Pilot"/>

        <field key="levelString" name="levelString" layout="${uppercase:${level}}"/>
        <field key="machineName" name="machineName" layout="${machinename}"/>
        <field key="assemblyVersion" name="assemblyVersion" layout="${assembly-version}"/>
        <field key="requestGuid" name="requestGuid" layout="${mdlc:item=requestGuid}"/>
        <field key="filialId" name="filialId" layout="${mdlc:item=filialId}"/>
        <field key="userId" name="userId" layout="${mdlc:item=userId}"/>
        <field key="posUrl" name="posUrl" layout="${mdlc:item=posUrl}"/>
        <field key="basketGuid" name="basketGuid" layout="${when:when='${mdlc:item=basketGuid}'=='':inner=${event-properties:item=basketGuid}:else=${mdlc:item=basketGuid}}"/>
        <field key="userGuid" name="userGuid" layout="${mdlc:item=userGuid}"/>
        <field key="unikaMethod" name="unikaMethod" layout="${mdlc:item=unikaMethod}"/>
        <field key="errorType" name="errorType" layout="${error-type}"/>
    </target>

  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <logger name="Hangfire.*" minlevel="Information" writeTo="json-rabbit" />
    <logger name="ECom.*" minlevel="Information" writeTo="defaultConsole" />
    <logger name="ECom.*" minlevel="Information" writeTo="json-rabbit" />

    <logger name="MassTransit*" minlevel="Debug" writeTo="defaultConsole" >
      <filters defaultAction="Log">
        <when condition="starts-with('${message}','SEND')" action="Ignore"/>
        <when condition="starts-with('${message}','RECEIVE')" action="Ignore"/>
      </filters>
    </logger>

    <logger name="MassTransit*" minlevel="Debug" writeTo="json-rabbit" >
      <filters defaultAction="Log">
        <when condition="starts-with('${message}','SEND')" action="Ignore"/>
        <when condition="starts-with('${message}','RECEIVE')" action="Ignore"/>
      </filters>
    </logger>
    
    <!--Skip Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />
  </rules>
</nlog>
