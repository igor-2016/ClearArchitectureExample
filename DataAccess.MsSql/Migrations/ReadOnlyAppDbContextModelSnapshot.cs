// <auto-generated />
using System;
using DataAccess.MsSql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.MsSql.Migrations
{
    [DbContext(typeof(ReadOnlyAppDbContext))]
    partial class ReadOnlyAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Expansion")
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataAccess.Interfaces.Dto.TraceableOrderDto", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("basketId");

                    b.Property<DateTime?>("ChequePrintDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("chequePrintDateTime");

                    b.Property<string>("ClientFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(98)")
                        .HasColumnName("clientFullName");

                    b.Property<string>("ClientMobilePhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("clientMobilePhone");

                    b.Property<string>("ClientMobilePhoneAlt1")
                        .IsRequired()
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("clientMobilePhoneAlt1");

                    b.Property<DateTime?>("CollectEndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("collectEndTime");

                    b.Property<DateTime?>("CollectStartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("collectStartTime");

                    b.Property<int>("CollectingState")
                        .HasColumnType("int")
                        .HasColumnName("collectingState");

                    b.Property<string>("ContainerBarcodes")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("containerBarcodes");

                    b.Property<string>("ContragentFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("contragentFullName");

                    b.Property<string>("ContragentOKPO")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("contragentOKPO");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime")
                        .HasColumnName("dateModified");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("deliveryAddress");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deliveryDate");

                    b.Property<int>("DeliveryId")
                        .HasColumnType("int")
                        .HasColumnName("deliveryId");

                    b.Property<TimeSpan>("DeliveryTimeFrom")
                        .HasColumnType("time(0)")
                        .HasColumnName("deliveryTimeFrom");

                    b.Property<TimeSpan>("DeliveryTimeTo")
                        .HasColumnType("time(0)")
                        .HasColumnName("deliveryTimeTo");

                    b.Property<int?>("DriverId")
                        .HasColumnType("int")
                        .HasColumnName("driverId");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(98)")
                        .HasColumnName("driverName");

                    b.Property<int?>("ExternalOrderId")
                        .HasColumnType("int")
                        .HasColumnName("externalOrderId");

                    b.Property<int>("FilialId")
                        .HasColumnType("int")
                        .HasColumnName("filialId");

                    b.Property<int?>("GlobalUserId")
                        .HasColumnType("int")
                        .HasColumnName("globalUserId");

                    b.Property<string>("LastContainerBarcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("lastContainerBarcode");

                    b.Property<string>("LogisticsType")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("logisticsType");

                    b.Property<string>("MegaContainerBarcodes")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("megaContainerBarcodes");

                    b.Property<int>("MerchantId")
                        .HasColumnType("int")
                        .HasColumnName("merchantId");

                    b.Property<string>("OrderBarcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("orderBarcode");

                    b.Property<DateTime>("OrderCreated")
                        .HasColumnType("datetime")
                        .HasColumnName("orderCreated");

                    b.Property<byte>("OrderFrom")
                        .HasColumnType("tinyint")
                        .HasColumnName("orderFrom");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("orderNumber");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int")
                        .HasColumnName("orderStatus");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int")
                        .HasColumnName("paymentId");

                    b.Property<string>("PickerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(98)")
                        .HasColumnName("pickerName");

                    b.Property<int?>("PlacesCount")
                        .HasColumnType("int")
                        .HasColumnName("placesCount");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("remark");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasColumnName("rowversion");

                    b.Property<string>("RroNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("rroNumber");

                    b.Property<decimal?>("SumPaymentFromInternet")
                        .HasColumnType("decimal(18,5)")
                        .HasColumnName("sumPaymentFromInternet");

                    b.Property<decimal?>("SumPaymentFromKassa")
                        .HasColumnType("decimal(18,5)")
                        .HasColumnName("sumPaymentFromKassa");

                    b.Property<string>("UserInn")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("userInn");

                    b.HasKey("Id");

                    b.HasIndex("BasketId")
                        .IsUnique()
                        .HasDatabaseName("UX_FozzyOrder_BasketId");

                    b.ToTable("Orders", "Expansion");
                });

            modelBuilder.Entity("DataAccess.Interfaces.Dto.TraceableOrderItemDto", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("basketId");

                    b.Property<bool>("Collectable")
                        .HasColumnType("bit")
                        .HasColumnName("сollectable");

                    b.Property<string>("ContainerBarcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("containerBarcode");

                    b.Property<string>("CustomParams")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("customParams");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2")
                        .HasColumnName("dateModified");

                    b.Property<int>("ExternalOrderId")
                        .HasColumnType("int")
                        .HasColumnName("externalOrderId");

                    b.Property<byte?>("FreezeStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("freezeStatus");

                    b.Property<int?>("GlobalUserId")
                        .HasColumnType("int")
                        .HasColumnName("globalUserId");

                    b.Property<bool?>("IsActivityEnable")
                        .HasColumnType("bit")
                        .HasColumnName("isActivityEnable");

                    b.Property<bool?>("IsFilled")
                        .HasColumnType("bit")
                        .HasColumnName("isFilled");

                    b.Property<bool?>("IsWeighted")
                        .HasColumnType("bit")
                        .HasColumnName("isWeighted");

                    b.Property<int>("LagerId")
                        .HasColumnType("int")
                        .HasColumnName("lagerId");

                    b.Property<string>("LagerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("lagerName");

                    b.Property<string>("LagerUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("lagerUnit");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("orderId");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("orderNumber");

                    b.Property<decimal>("OrderQuantity")
                        .HasColumnType("decimal(12,3)")
                        .HasColumnName("orderQuantity");

                    b.Property<string>("PickerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(98)")
                        .HasColumnName("pickerName");

                    b.Property<decimal?>("PickerQuantity")
                        .HasColumnType("decimal(12,3)")
                        .HasColumnName("pickerQuantity");

                    b.Property<decimal>("PriceOut")
                        .HasColumnType("decimal(18,5)")
                        .HasColumnName("priceOut");

                    b.Property<string>("ReplacementLagers")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("replacementLagers");

                    b.Property<int?>("ReplacementOnLagerId")
                        .HasColumnType("int")
                        .HasColumnName("replacementOnLagerId");

                    b.Property<int>("RowNum")
                        .HasColumnType("int")
                        .HasColumnName("rowNum");

                    b.Property<string>("SortingCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("sortingCategory");

                    b.Property<string>("UserInn")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("userInn");

                    b.HasKey("Id");

                    b.HasIndex("BasketId")
                        .HasDatabaseName("IX_FozzyOrderItems_BasketId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems", "Expansion");
                });

            modelBuilder.Entity("DataAccess.Interfaces.Dto.TraceableOrderItemDto", b =>
                {
                    b.HasOne("DataAccess.Interfaces.Dto.TraceableOrderDto", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Interfaces.Dto.TraceableOrderDto", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
